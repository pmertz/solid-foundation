# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Install SonarCloud scanner
        shell: pwsh
        run: |
          dotnet tool install --global dotnet-sonarscanner
          
      - name: Restore dependencies
        run: dotnet restore --configfile src/nuget.config
      
      - name: Sonar Cloud Begin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"pmertz_solid-foundation" /o:"pmertz" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
            
      - name: Dotnet build
        shell: pwsh
        run: |
          dotnet build --no-restore --configuration Release
          
      - name: Dotnet test
        shell: pwsh
        run: |
          dotnet test --no-restore --no-build  --configuration Release --collect:"XPlat Code Coverage" --results-directory TestResults/ /p:CoverletOutputFormat="opencover" /p:CollectCoverage=true /p:CoverletOutput="obj/" /p:SkipAutoProps=true          

      - name: Sonar End
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
